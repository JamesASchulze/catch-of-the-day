{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","base.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","appId","base","Rebase","createClass","database","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","store","console","log","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.10fa85d5.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n\n   static propTypes = {\n      history: PropTypes.object\n   }\n\n   myInput = React.createRef();\n\n   goToStore = (event) => {\n      // Stop the form from submitting\n      event.preventDefault();\n      // get the text from the input\n      const storeName = this.myInput.current.value;\n      // change the page to /store/whatever-they-entered\n      this.props.history.push(`/store/${storeName}`);\n   }\n\n   render() {\n      return (\n         <form className=\"store-selector\" onSubmit={this.goToStore}>\n            {/* Comment here */}\n            <h2>Please Enter A Store</h2>\n            <input\n               type=\"text\"\n               ref={this.myInput}\n               required\n               placeholder=\"Store Name\"\n               defaultValue={getFunName()}\n            />\n            <button type=\"submit\">Visit Store 👉</button>\n         </form>\n      )\n   }\n}\n\nexport default StorePicker;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = (props) => (\n   <header className=\"top\">\n      <h1>Catch\n         <span className=\"ofThe\">\n            <span className=\"of\">Of</span>\n            <span className=\"the\">The</span>\n         </span>\n         Day</h1>\n      <h3 className=\"tagline\">\n         <span>{props.tagline}</span>\n      </h3>\n   </header>\n)\n\nHeader.propTypes = {\n   tagline: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n   static propTypes = {\n      fishes: PropTypes.object,\n      order: PropTypes.object,\n      removeFromOrder: PropTypes.func\n   }\n   // Render out each type of fish in the order.\n   renderOrder = (key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      // Check for fish and the status of available.\n      const isAvailable = fish && fish.status === 'available';\n      const transitionOptions = {\n         classNames: \"order\",\n         key: key,\n         timeout: { enter: 500, exit: 500 }\n      }\n      // this is to keep the page looking nice until a fish is added, or a previous order is loaded.\n      if(!fish) return null;\n\n      // Check to see if the fish is available.\n      if (!isAvailable) {\n         return (\n            <CSSTransition {...transitionOptions} >\n               <li key={key}>\n                  Sorry {fish ? fish.name : 'fish'} is no longer available.\n               </li>\n            </CSSTransition>\n         )\n      }\n      return (\n         <CSSTransition {...transitionOptions} >\n            <li key={key}>\n               <span>\n                  <TransitionGroup component=\"span\" className=\"count\">\n                     <CSSTransition\n                        classNames=\"count\"\n                        key={count}\n                        timeout={{ enter: 500, exit: 500 }}\n                     >\n                        <span>{ count }</span>\n                     </CSSTransition>\n                  </TransitionGroup>\n                  lbs { fish.name }\n                  {formatPrice(count * fish.price)}\n               </span>\n               <button onClick={() => {this.props.removeFromOrder(key)}} >\n                  &times;\n               </button>\n            </li>\n         </CSSTransition>\n      )\n   }\n\n   // render out the total cost of the order\n   render() {\n      const orderIds = Object.keys(this.props.order);\n      const total = orderIds.reduce((prevTotal, key) => {\n         const fish = this.props.fishes[key];\n         const count = this.props.order[key];\n         const isAvailable = fish && fish.status === 'available';\n         if (isAvailable) {\n            return prevTotal + (count * fish.price);\n         }\n         return prevTotal;\n\n      }, 0);\n\n      return (\n         <div className=\"order-wrap\">\n            <h2>Order 🐠</h2>\n            <TransitionGroup component=\"ul\" className=\"order\">\n               {orderIds.map(this.renderOrder)}\n            </TransitionGroup>\n            <div className=\"total\">\n               Total:\n               <strong>{formatPrice(total)}</strong>\n            </div>\n         </div>\n      )\n   }\n}\n\nexport default Order;","import Rebase from \"re-base\";\nimport firebase from \"firebase\"\n\nconst firebaseApp = firebase.initializeApp({\n      apiKey: \"AIzaSyAxkofyV8o4xqZz0TZnu99E8MDpTXq5v1E\",\n      authDomain: \"catch-of-the-day-james-s-8ef7f.firebaseapp.com\",\n      databaseURL: \"https://catch-of-the-day-james-s-8ef7f.firebaseio.com\",\n      // projectId: \"catch-of-the-day-james-s-8ef7f\",\n      // storageBucket: \"catch-of-the-day-james-s-8ef7f.appspot.com\",\n      // messagingSenderId: \"1076709643946\",\n      appId: \"1:1076709643946:web:1acf6b9c4f258fe9f462d3\",\n      // measurementId: \"G-HV7HT0BCD5\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// Named export\nexport { firebaseApp }\n\n// Default export\nexport default base;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n\n   static propTypes = {\n      addFish: PropTypes.func\n   }\n\n   nameRef = React.createRef();\n   priceRef = React.createRef();\n   statusRef = React.createRef();\n   descRef = React.createRef();\n   imageRef = React.createRef();\n\n   createFish = (event) => {\n      // Stop the form from submitting\n      event.preventDefault();\n      // create de 🐟\n      const fish = {\n         name: this.nameRef.current.value,\n         price: parseFloat(this.priceRef.current.value),\n         status: this.statusRef.current.value,\n         desc: this.descRef.current.value,\n         image: this.imageRef.current.value\n      };\n      this.props.addFish(fish);\n      // Refresh form\n      event.currentTarget.reset();\n   };\n\n   render() {\n      return (\n         <form className=\"fish-edit\" onSubmit={this.createFish}>\n            <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n            <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n            <select name=\"status\" ref={this.statusRef} type=\"text\" placeholder=\"Status\" >\n               <option value=\"available\">Fresh!</option>\n               <option value=\"unavailable\">Sold Out!</option>\n            </select>\n            <textarea name=\"desc\" ref={this.descRef} type=\"text\" placeholder=\"Desc\" />\n            <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n            <button type=\"submit\">+ Add Fish</button>\n         </form>\n      )\n   }\n}\n\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n\n   static propTypes = {\n      fish: PropTypes.shape({\n         image: PropTypes.string,\n         name: PropTypes.string,\n         desc: PropTypes.string,\n         status: PropTypes.string,\n         price: PropTypes.number\n      }),\n      index: PropTypes.string,\n      updateFish: PropTypes.func\n   }\n\n   handleChange = event => {\n      //console.log(event.currentTarget.value);\n      // Update fish\n      // copy the current fish\n      const updatedFish = {\n         ...this.props.fish,\n         // Computed Property names\n         [event.currentTarget.name]: event.currentTarget.value\n       };\n       // Send the updated fish back up string!\n       this.props.updateFish(this.props.index, updatedFish);\n   }\n\n   render() {\n      return <div className=\"fish-edit\">\n         <input\n            type=\"text\"\n            name=\"name\" // used to ... Computed Property Names.\n            onChange={this.handleChange}\n            value={this.props.fish.name} />\n         <input\n            type=\"text\"\n            name=\"price\" // used to ... Computed Property Names.\n            onChange={this.handleChange}\n            value={this.props.fish.price} />\n         <select\n            type=\"text\"\n            name=\"status\" // used to ... Computed Property Names.\n            onChange={this.handleChange}\n            value={this.props.fish.status} >\n               <option value=\"available\">Fresh!</option>\n               <option value=\"unavailable\">Sold Out!</option>\n         </select>\n         <textarea\n            name=\"desc\" // used to ... Computed Property Names.\n            onChange={this.handleChange}\n            value={this.props.fish.desc} />\n         <input\n            type=\"text\"\n            name=\"image\" // used to ... Computed Property Names.\n            onChange={this.handleChange}\n            value={this.props.fish.image} />\n         <button onClick={ () => this.props.deleteFish(this.props.index) }>Remove Fish</button>\n      </div>;\n   }\n\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => (\n   <nav className=\"login\">\n      <h2>Inventory Login</h2>\n      <p>Sign in to manage your store's inventory.</p>\n      <button className=\"github\" onClick={() => props.authenticate('Github')}>\n         Log in with Github\n      </button>\n      <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>\n         Log in with Twitter\n      </button>\n   </nav>\n);\n\nLogin.propTypes = {\n   authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport base, { firebaseApp } from \"../base\";\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\n\nclass Inventory extends React.Component {\n\n   static propTypes = {\n      fishes: PropTypes.object,\n      updateFish: PropTypes.func,\n      deleteFish: PropTypes.func,\n      loadSampleFishes: PropTypes.func,\n   };\n\n   state = {\n      uid: null,\n      owner: null,\n   };\n\n   componentDidMount() {\n      firebase.auth().onAuthStateChanged(user => {\n         if(user) {\n            this.authHandler({ user });\n         }\n      });\n   }\n\n   authHandler = async (authData) => {\n      // look up the current store in the firebase db\n      const store = await base.fetch(this.props.storeId, { context: this });\n      console.log(store)\n      // claim it if there is no owner\n      if (!store.owner) {\n         // Save it as our own\n         await base.post(`${this.props.storeId}/owner`, {\n            data: authData.user.uid\n         });\n      }\n      // Set the state of the inventory component to reflect the current user.\n      this.setState({\n         uid: authData.user.uid,\n         owner: store.owner || authData.user.uid\n      });\n      console.log(authData);\n   };\n\n   authenticate = (provider) => {\n      const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n      firebaseApp\n         .auth()\n         .signInWithPopup(authProvider)\n         .then(this.authHandler);\n   };\n\n   // Log out function\n   logout = async () => {\n      console.log(`Logging out!`);\n      await firebase.auth().signOut();\n      this.setState({ uid: null });\n   }\n\n   render() {\n      const logout = <button onClick={this.logout}>Log Out!</button>;\n\n      // Check if they are logged in\n      if (!this.state.uid) {\n         return <Login authenticate={this.authenticate} />\n      };\n\n      // check if they are not the owner of the store\n      if (this.state.uid !== this.state.owner) {\n         return (\n            <div>\n               <p>Sorry matey, ye not be the owner!</p>\n               {logout}\n            </div>\n         )\n      };\n\n      // They must be the owner. Render the inventory.\n      return (\n         <div className=\"inventory\">\n            <h2>Inventory! 🐟</h2>\n            {logout}\n            {Object.keys(this.props.fishes).map(key =>\n                  <EditFishForm\n                     key={key}\n                     index={key}\n                     fish={this.props.fishes[key]}\n                     updateFish={this.props.updateFish}\n                     deleteFish={this.props.deleteFish}\n                  />\n               )\n            }\n            <AddFishForm addFish={this.props.addFish} />\n            <button onClick={this.props.loadSampleFishes}>Load Sample 🐟 Inventory</button>\n         </div>\n      )\n   };\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n   static propTypes = {\n      details: PropTypes.shape({\n         image: PropTypes.string,\n         name: PropTypes.string,\n         desc: PropTypes.string,\n         status: PropTypes.string,\n         price: PropTypes.number\n      }),\n      addToOrder: PropTypes.func\n   }\n   handleClick = () => {\n      this.props.addToOrder(this.props.index);\n   }\n\n   render() {\n\n      const { image, name, price, desc, status } = this.props.details;\n      const isAvailable = status === 'available';\n      return (\n         <li className=\"menu-fish\">\n            <img src={image} alt={name} />\n            <h3 className=\"fish-name\">\n               {name}\n               <span className=\"price\">{formatPrice(price)}</span>\n            </h3>\n            <p>{desc}</p>\n            <button disabled={!isAvailable} onClick={this.handleClick} >\n               {isAvailable ? \"Add To Cart\" : \"SOLD OUT\"}\n            </button>\n\n         </li>\n      )\n   }\n}\n\nexport default Fish;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n\n   state = {\n      fishes: {},\n      order: {}\n   };\n\n   static propTypes = {\n      match: PropTypes.object\n   }\n\n   componentDidMount() {\n      const { params } = this.props.match;\n      // Reinstate local storage, so that it is not wiped out when the page is reloaded.\n      const localStorageRef = localStorage.getItem(params.storeId);\n      if (localStorageRef) {\n         this.setState({ order: JSON.parse(localStorageRef) })\n      }\n      // Store this.ref, so that it can be removed when the component is unmounted.\n      this.ref = base.syncState(`${params.storeId}/fishes`, {\n         context: this,\n         state: \"fishes\"\n      });\n   }\n\n   componentDidUpdate() {\n      console.log(this.state.order);\n      localStorage.setItem(this.props.match.params.storeId,\n         JSON.stringify(this.state.order));\n      console.log(\"it updated\");\n   }\n\n   componentWillUnmount() {\n      base.removeBinding(this.ref);\n   }\n\n   addFish = fish => {\n      // console.log(\"adding a fish\")\n      // Copy the existing state\n      const fishes = { ...this.state.fishes };\n      // add new fish to the variable\n      fishes[`fish${Date.now()}`] = fish;\n      // Set the new fishes object to state\n      this.setState({ fishes });\n   };\n\n   updateFish = (key, updatedFish) => {\n      // Copy current state\n      const fishes = { ...this.state.fishes };\n      // Update state\n      fishes[key] = updatedFish;\n      // Set it to state.\n      this.setState({ fishes });\n   }\n\n   deleteFish = key => {\n      // copy state\n      const fishes = { ...this.state.fishes };\n      // Update state by removing the fish\n      fishes[key] = null;\n      // Set the updated fishes object to state\n      this.setState({ fishes });\n   }\n\n   loadSampleFishes = () => {\n      this.setState({ fishes : sampleFishes });\n   };\n\n   addToOrder = (key) => {\n      // Copy the existing State\n      const order = { ...this.state.order };\n      // Either add to the order, or update the number in our order.\n      order[key] = order[key] + 1 || 1;\n      // Call setState to update our state object\n      this.setState({ order });\n   }\n\n   removeFromOrder = key => {\n      // Copy state\n      const order = { ...this.state.order };\n      // Remove the fish from the order\n      delete order[key];  // Can use the delete keyword because this is not being mirrored to firebase.\n      // Update state with the updated order\n      this.setState({ order });\n   }\n\n   render() {\n\n      return (\n         <div className=\"catch-of-the-day\">\n            <div className=\"menu\">\n               <Header tagline=\"Fresh Seafood Market\"/>\n               <ul className=\"fishes\">\n                  {Object.keys(this.state.fishes).map(key => (\n                     <Fish\n                        key={key}\n                        index={key}\n                        details={this.state.fishes[key]}\n                        addToOrder={this.addToOrder}\n                     />\n                  ))}\n               </ul>\n            </div>\n            {/* <Order {...this.state} /> */}\n            <Order\n               fishes={this.state.fishes}\n               order={this.state.order}\n               removeFromOrder={this.removeFromOrder}\n            />\n            <Inventory\n               addFish={this.addFish}\n               loadSampleFishes={this.loadSampleFishes}\n               fishes={this.state.fishes}\n               updateFish={this.updateFish}\n               deleteFish={this.deleteFish}\n               storeId={this.props.match.params.storeId}\n            />\n         </div>\n      );\n   }\n}\n\nexport default App;","import React from \"react\";\n\nconst NotFound = () => (\n   <div>\n      <h2>🐟 Page Not Found!!</h2>\n   </div>\n);\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n   <BrowserRouter>\n      <Switch>\n         <Route exact path=\"/\" component={StorePicker} />\n         <Route path=\"/store/:storeId\" component={App} />\n         <Route component={NotFound} />\n      </Switch>\n   </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport \"./css/style.css\"; // Import CSS\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}